syntax = "proto3";

option go_package = "generated/sidecar_pb";

package sidecar;

service Sidecar {
    rpc PublishChart(PublishChartRequest) returns (PublishChartResponse) {}
    rpc ValidateChart(ValidateChartRequest) returns (ValidateChartResponse) {}
}

message PublishChartRequest {
    ChartParams chart = 1;

    string repository_directory = 2;
}

message PublishChartResponse {
}

message ValidateChartRequest {
    ChartParams chart = 1;
}

message ValidateChartResponse {
    bool valid = 1;
    repeated string errors = 2;
}

// Next ID: 7
message ChartParams {
    string name = 1;
    string version = 2;

    repeated ServiceParams services = 7;

    reserved 3 to 6;
}

// Next ID: 7
message ServiceParams {
    string name = 6;

    int32 replica_count = 1;

    Image image = 2;

    Resources resources = 3;

    EnvironmentConfig environment_config = 4;

    repeated Endpoint endpoints = 5; // Currently only one service is supported.
}

message Endpoint {
    int32 port = 1;
}

message EnvironmentConfig {
    // Contains environment key and value pairs that are hardcoded into the chart.
    repeated EnvironmentVariable environment_variables = 1;

    repeated Secret secrets = 3;
}

message Secret {
    string name = 1;
    string environment_key = 2;
}

message EnvironmentVariable {
    string name = 1;
    string value = 2;
}

message Image {
    string name = 1;
    string tag = 2;
}

message Resources {
    int32 cpu_cores_requested = 1;
    int32 cpu_cores_limit = 2;
    int64 memory_bytes_requested = 3;
    int64 memory_bytes_limit = 4;
}