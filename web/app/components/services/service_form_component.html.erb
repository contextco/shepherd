<%= form_with model: service_object, url:, method: form_method do |form| %>
  <%= form.hidden_field :service_id, value: service_object.service_id  %>
  <div class="flex flex-col gap-6">
    <%= render UI::FormTextFieldComponent.new(title: 'Name', disabled: disabled || update?) do |component| %>
      <%= component.with_label do %>
        Unique within the project. Must be lower case and contain only letters, numbers, and hyphens with no spaces. Cannot change in future versions.
      <% end %>
      <%= component.with_field do %>
        <%= form.text_field :name,
                            placeholder: 'my-service',
                            required: true,
                            disabled: disabled || update?,
                            'data-1p-ignore': true,
                            'data-lpignore': true,
                            class: ['text-sm w-full !p-0 border-0 focus:ring-0 bg-transparent', { 'cursor-not-allowed': disabled || update? }] %>
      <% end %>
    <% end %>

    <%= render UI::FormTextFieldComponent.new(title: 'Image', disabled:) do |component| %>
      <%= component.with_label do %>
        Valid docker image url with version tag. <span class="font-mono">:latest</span> is not allowed.
      <% end %>
      <%= component.with_field do %>
        <%= form.text_field :image,
                            required: true,
                            disabled:,
                            placeholder: 'docker.io/library/nginx:1.24.0-alpine3.17',
                            class: ['text-sm w-full !p-0 border-0 focus:ring-0 bg-transparent', { 'cursor-not-allowed': disabled }] %>
      <% end %>
    <% end %>

    <hr class="border-stone-300 my-2">

    <%= render Services::ImageCredentialsComponent.new(form:, disabled:) %>

    <hr class="border-stone-300 my-2">

    <%= render UI::FormResourcesComponent.new(form:, fields: %i[cpu memory], disabled:) %>

    <hr class="border-stone-300 my-2">

    <%= render UI::FormMultiFieldComponent.new(
      title: 'Environment Variables',
      caveat: :optional,
      form:,
      association_name: :environment_variables,
      vertical: true,
      disabled:,
      model_class: Service::Form::EnvironmentVariableForm,
      child_component: Services::EnvironmentVariableComponent,
      ) do |component| %>
      <%= component.with_label do %>
        <span>Configuration values necessary to configure your service. Do not include sensitive values, for these you should use secrets.</span>
      <% end %>
    <% end %>

    <hr class="border-stone-300 my-2">

    <%= render UI::FormMultiFieldComponent.new(
      title: 'Secrets',
      form:,
      caveat: :optional,
      disabled:,
      association_name: :secrets,
      model_class: Service::Form::SecretForm,
      child_component: Services::SecretComponent,
    ) do |component| %>
      <%= component.with_label do %>
        <span>Use secrets for sensitive values your clients will provide and own.</span>
        <span>For example, API keys, database passwords, and encryption keys.</span>
      <% end %>
    <% end %>

    <hr class="border-stone-300 my-2">

    <%= render UI::FormTextFieldComponent.new(title: 'Predeploy Command', caveat: :optional, disabled:) do |component| %>
      <%= component.with_label do %>
        Command to run before deploying the service. For example, database migrations.
      <% end %>
      <%= component.with_field do %>
        <div class="flex items-center gap-2">
          <span class="text-xs mt-0.5">$</span>
          <%= form.text_field :predeploy_command,
                              placeholder: disabled ? nil : 'rake db:migrate',
                              disabled:,
                              class: ['text-sm w-full !p-0 border-0 focus:ring-0 bg-transparent', { 'cursor-not-allowed': disabled }] %>
        </div>
      <% end %>
    <% end %>

    <hr class="border-stone-300 my-2">

    <%= render Services::FormDiskComponent.new(form:, options: Service::Form::MOUNT_DISK_OPTIONS, disabled:) %>

    <hr class="border-stone-300 my-2">

    <div data-controller="singular-checkbox">
      <%= render UI::FormMultiFieldComponent.new(
        title: 'Open Ports',
        caveat: :optional,
        form:,
        disabled:,
        association_name: :ports,
        model_class: Service::Form::PortForm,
        child_component: Services::PortComponent,
        ) do |component| %>
        <%= component.with_label do %>
          <div>
            Optional open ports for the service.
            Check <span class="font-medium">Allow Ingress</span> to expose the port to the internet with an ingress.
          </div>
        <% end %>
        <%= component.with_header do %>
          <div class="flex items-center gap-8 text-sm font-medium justify-between">
            <span class="text-stone-800 flex-none">Port</span>
            <span class="text-stone-800 flex-none mr-14">Ingress</span>
          </div>
        <% end %>
      <% end %>
    </div>

    <%= form.submit update_create_text,
                    disabled:,
                    class: [
                      'px-3 py-2 mt-2 text-stone-100 w-fit',
                      { 'cursor-pointer bg-stone-700': !disabled, 'cursor-not-allowed bg-stone-500 opacity-90': disabled }
                    ] %>
  </div>
<% end %>
