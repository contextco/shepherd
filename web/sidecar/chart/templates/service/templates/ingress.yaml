{{- if $.Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "test.fullname" $ }}-external-ingress
  namespace: {{ $.Release.Namespace }}
  annotations:
    {{- if $.Capabilities.APIVersions.Has "networking.gke.io/v1beta1" }}
    {{- if eq $.Values.ingress.scheme "external" }}
    networking.gke.io/managed-certificates: {{ include "test.fullname" $ }}-external-ingress-cert
    {{- else if eq $.Values.ingress.scheme "internal" }}
    kubernetes.io/ingress.class: "gce-internal"
    {{- end }}
    {{- end }}
    {{- if $.Capabilities.APIVersions.Has "elbv2.k8s.aws/v1beta1" }}
    {{- if eq $.Values.ingress.scheme "external" }}
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    {{- else if eq $.Values.ingress.scheme "internal" }}
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    {{- end }}
    alb.ingress.kubernetes.io/target-type: ip
    {{- end }}
spec:
  {{- if $.Capabilities.APIVersions.Has "elbv2.k8s.aws/v1beta1" }}
  ingressClassName: alb
  {{- end }}
  rules:
    - http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ include "test.fullname" $ }}-service
                port:
                  number: {{ $.Values.ingress.port }}
      {{- if eq $.Values.ingress.scheme "external" }}
      host: {{ $.Values.ingress.external.host }}
      {{- end }}
{{- end }}

